{% set version = "3.0" %}
{% set build = 3 %}
{% set netmod_variant = netmod if netmod else "default" %}

package:
  name: mvapich
  version: {{ version }}

source:
  url: https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-{{ version }}.tar.gz
  sha256: ee076c4e672d18d6bf8dd2250e4a91fa96aac1db2c788e4572b5513d86936efb

build:
  number: {{ build }}
  string: "{{ netmod_variant }}_h{{ PKG_HASH }}_{{ build }}"
  skip: true  # [win or osx]
  run_exports:
    - {{ pin_subpackage('mvapich', max_pin='x.y') }}

requirements:
  build:
    - bison
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ stdlib("c") }}
    - make
  host:
    - libhwloc
    {% if netmod == "ucx" %}
    - ucx >=1.12.0
    {% endif %}
  run:
    - mpi 1.0.* mvapich

test:
  requires:
    - {{ compiler('c') }}

  commands:
{% if target_platform == "linux-64" %}
    - mpiexec -n 2 $PREFIX/libexec/osu-micro-benchmarks/mpi/pt2pt/osu_latency -m 1024:1024
{% else %}
    - echo "Skipping linux-aarch64 & linux-ppc64le tests for now"
{% endif %}

about:
  home: https://mvapich.cse.ohio-state.edu/
  license: BSD-3-Clause
  license_family: BSD
  license_file: COPYRIGHT
  summary: MVAPICH, a high-performance MPI library by The Ohio State University.
  description: |
    MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.
    It provides enhancements including optimization for different networking technologies.

    ### Important Configuration
    The default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes
    to specific CPU cores to improve performance due to cache locality and reduced context switching.
    In some environments, particularly those using the Slurm job scheduler, this may degrade performance
    or lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.

    ### Selecting Netmods: OFI or UCX
    MVAPICH supports two high-level network modules (netmods), namely OFI and UCX:
    - For the OFI netmod, use: `conda install conda-forge::mvapich=*=ofi_*`
    - For the UCX netmod, use: `conda install conda-forge::mvapich=*=ucx_*`

    These commands will install the MVAPICH package configured with the desired netmod.

    ### About the Compilers
    Note that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or
    their equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda
    environment as dependencies.
    
extra:
  recipe-maintainers:
    - j34ni
